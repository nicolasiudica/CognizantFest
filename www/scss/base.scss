/// Mixin to prefix several properties at once
/// @param {Map} $declarations - Declarations to prefix
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($declarations, $prefixes: ()) {
	@each $property, $value in $declarations {
		@each $prefix in $prefixes {
			#{'-' + $prefix + '-' + $property}: $value;
		}
		// Output standard non-prefixed declaration
		#{$property}: $value;
	}
}

/// Mixin to suffix several properties at once
/// @param {Map} $declarations - Declarations to suffix
/// @param {List} $suffixes (()) - List of suffixes to print
@mixin suffix($declarations, $suffixes: ()) {
	@each $property, $value in $declarations {
		@each $suffix in $suffixes {
			#{$property}: #{'-' + $suffix + '-' + $value};
		}
		// Output standard non-prefixed declaration
		#{$property}: $value;
	}
}

@mixin rotate($deg: 90) {
	$sDeg: #{$deg}deg;
	display: inline-block;
	@include prefix((transform: rotate($sDeg) !important), webkit moz ms o);
	//-webkit-transform: rotate($sDeg) !important;
	//-moz-transform: rotate($sDeg) !important;
	//-ms-transform: rotate($sDeg) !important;
	//-o-transform: rotate($sDeg) !important;
	//transform: rotate($sDeg) !important;
}

.map-fixed-right {
	position: fixed !important;
	//right: -52px;
	top: 149px;
	padding: 0 !important;
}

.vertical-text {
	writing-mode: vertical-rl;
	text-orientation: upright;
}

@each $deg in 30, 45, 60, 90, 180 {
	.ion-rotate-#{$deg} {
		@include rotate(#{$deg});
	}
	.ion-rotate-inv-#{$deg} {
		@include rotate(#{-$deg});
	}
}


/* LOGIN */

.error-container {
	margin: 5px 0;
}

.error-container:last-child {
	margin: 5px 0 0;
}

.error {
	padding: 10px 16px;
	//font-family: "Arial Black", Gadget, sans-serif;
	//font-size: 11px;
	text-transform: uppercase;
	color: #555;
	vertical-align: middle;
}

.error i {
	font-size: 24px;
	color: #B83E2C;
	vertical-align: middle;
}

.last-error-container > .error {
	padding: 10px 16px 0;
}

.has-errors {
	border-bottom: 3px solid #B83E2C;
}

.no-errors {
	border-bottom: 3px solid green;
}


/*
* SHOW HIDE ANIMATIONS
*/

@mixin fadeAnimation($type, $time) {
	@include prefix((animation: fade + $type $time), webkit moz ms o);
	//-webkit-animation: fade + $type $time;
	//animation: fade + $type $time;
}

@mixin animationDelay($time) {
	@include prefix((animation-delay: $time, animation-duration: 0), webkit moz ms o);
}

$animationTime: 300ms;
$delayTime: 100ms;
$inAnimation: InLeft;
$outAnimation: OutRight;

@mixin fadeInAnimation() {
	@include fadeAnimation($inAnimation, $animationTime)
}

@mixin fadeOutAnimation() {
	@include fadeAnimation($outAnimation, $animationTime)
}

@mixin fadeAnimationDelay() {
	@include animationDelay($delayTime)
}

.ng {
	&-hide {
		&-remove {
			@include fadeInAnimation;
		}
		&-add {
			@include fadeOutAnimation;
		}
	}
	&-enter,
	&-move {
		&, &-active {
			@include fadeInAnimation;
		}
	}
	&-leave {
		@include fadeOutAnimation;
	}
	&[class*="-stagger"] {
		@include fadeAnimationDelay;
	}
}


/*
* FLEX CENTER VERTICAL
*/

.flex {
	&-container {
		@include suffix((display: inline-flex), webkit);
		display: -ms-inline-flexbox;
		@include prefix((flex-direction: column, flex-wrap: nowrap), webkit ms);
		@include prefix((justify-content: center, align-content: center, align-items: center), webkit);
		@include prefix((flex-pack: center, flex-line-pack: center, flex-align: center), ms);
		&-item {
			@include prefix(( flex: 0 1 auto), webkit ms);
			@include prefix(( order: 0, align-self: auto), webkit);
			@include prefix(( flex-order: 0, flex-item-align: auto), ms);
			h1,
			p {
				color: #6b6b6b;
			}
		}
	}
}

.item {
	border-bottom-width: 0px !important;
}

.bar .back-button .hide {
	display: block !important;
}